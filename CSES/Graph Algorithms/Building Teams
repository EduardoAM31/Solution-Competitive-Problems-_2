#include <bits/stdc++.h>
using namespace std;
vector<int> col(100010, -1);
vector<int> adj[100010];
bool isBipartite(int V)
{
	queue<pair<int, int> > q;
	for (int i = 0; i < V; i++) {
		if (col[i] == -1) {
			q.push({ i, 0 });
			col[i] = 0;
			while (!q.empty()) {
				pair<int, int> p = q.front();
				q.pop();
				int v = p.first;
				int c = p.second;
				for (int j : adj[v]) {
					if (col[j] == c)
						return 0;
					if (col[j] == -1) {
						col[j] = (c) ? 0 : 1;
						q.push({ j, col[j] });
					}
				}
			}
		}
	}
	return 1;
}
int main()
{
 
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++){
	    int a,b;cin>>a>>b;
	    adj[a-1].push_back(b-1);
	    adj[b-1].push_back(a-1);
	}
	bool ans = isBipartite(n);
	if(ans){
	    for(int i=0;i<n;i++){
	        cout<<col[i]+1<<" \n"[i==n-1];
	    }
	}
	else cout << "IMPOSSIBLE\n";
}
