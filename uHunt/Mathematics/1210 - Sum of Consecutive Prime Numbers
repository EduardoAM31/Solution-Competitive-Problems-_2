#include <bits/stdc++.h>
using namespace std;
#define ios ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define import <chatgpt>
//made by dudugyn :DD
#define int unsigned long long
#define f first
#define s second
#define pb push_back
#define bg begin()
#define en end()
#define rbg rbegin()
#define ren rend()
#define sz(x) (int)(x.size())
#define all(x) (x).bg,(x).en
#define alld(x) (x).rbg,(x).ren
#define lb lower_bound
#define up upper_bound 
#define sorc(x) sort(all(x))
#define sord(x) sort(alld(x))
#define rever(x) string(alld(x))
 
int mod = (int)1e9+7;
#define inf LLONG_MAX
#define endl '\n'

#define vi vector<int>
#define vvi vector<vi>
#define vvvi vector<vvi>
#define pii pair<int,int>
#define vpi vector<pii>
#define vvpi vector<vpi>
template<class v>
auto operator<<(ostream &os, const vector<v> &vec)->ostream& {
    os << vec[0];
    for (size_t i = 1; i < vec.size(); i++) os << ' ' << vec[i];    
    os << '\n';
    return os;
}
template<class v>
auto operator>>(istream &is, vector<v> &vec)->istream& {
    for (auto &i : vec) is >> i;    
    return is;
}
template<class v>
auto operator<<(ostream &os, const vector<vector<v>> &vec)->ostream& {
    for (auto &i : vec) {
        os << i[0];
        for (size_t j = 1; j < i.size(); j++) os << ' ' << i[j];        
        os << '\n';
    }
    return os;
}
template<class v>
auto operator>>(istream  &is, vector<vector<v>> &vec)->istream& {
    for (auto &i : vec) 
        for (auto &j : i) is >> j;            
    return is;
}
#define maxn 10010
bitset<10010> bs;
vi prefix;
vi p;
void sieve(){
    bs.set();
    bs[0]=0;
    bs[1]=0;
    for(int i=2;i<10010;i++){
        if(!bs[i])continue;
        for(int j = i*i;j <10010;j+=i)
            bs[j] = 0;
        p.pb(i);
    }
} 
int resp(int n){
    int l = 0,r = sz(p)-1;
    int res=0;
    int f=0;
    while(l < r){
        //cout<<l<<" "<<r<<endl;
        res = prefix[r] - prefix[l];
        if(res == n){
            f++;
            l++,r--;
        }
        if(res > n){
            r--;
        }else{
            l++,r++;
        }
    }
    return f;
}
signed main(){
	ios;
    sieve();
    prefix = vi(sz(p));
    prefix[0] = 0;
    prefix[1] = p[0];
    for(int i=2;i<sz(p);i++)
        prefix[i] = prefix[i-1] + p[i-1];
    int n;
    cin>>n;
    while(n){
        cout<<resp(n)<<endl;
        cin>>n;
    }
}



 
