#include <bits/stdc++.h>
using namespace std;
#define ios ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define import <chatgpt>
 
#define int long long
#define f first
#define s second
#define pb push_back
#define bg begin()
#define en end()
#define sz(x) (int)(x.size())
#define all(x) (x).bg,(x).en
#define alld(x) (x).rbegin,(x).rend
#define lb lower_bound
#define up upper_bound 
#define sorc(x) sort(all(x))
#define sord(x) sort(alld(x))
 
const int mod = (int)1e9+7;
#define inf LLONG_MAX
 
#define vi vector<int>
#define vvi vector<vi>
#define vvvi vector<vvi>
#define pii pair<int,int>
#define vpi vector<pii>
#define vvpi vector<vpi>
int fmod(const int i, const int j){return i < j ? i : i % j;}
template<class v>
auto operator<<(ostream &os, const vector<v> &vec)->ostream& {
    os << vec[0];
    for (size_t i = 1; i < vec.size(); i++) os << ' ' << vec[i];    
    os << '\n';
    return os;
}
template<class v>
auto operator>>(istream &is, vector<v> &vec)->istream& {
    for (auto &i : vec) is >> i;    
    return is;
}
template<class v>
auto operator<<(ostream &os, const vector<vector<v>> &vec)->ostream& {
    for (auto &i : vec) {
        os << i[0];
        for (size_t j = 1; j < i.size(); j++) os << ' ' << i[j];        
        os << '\n';
    }
    return os;
}
template<class v>
auto operator>>(istream  &is, vector<vector<v>> &vec)->istream& {
    for (auto &i : vec) 
        for (auto &j : i) is >> j;            
    return is;
}
const int maxn = 200005;
const int LOG = 31;
int timer;
vvi g(maxn);
vi in(maxn, 0);
vi out(maxn, 0);
vvi pai(maxn, vi(LOG));
vvi rg(maxn);
vi dist(maxn);
void dfs(int v, int p){
	in[v]=timer++;
	pai[v][0] = p; 
	for(int i=1; i<LOG; i++){
		pai[v][i] = pai[pai[v][i-1]][i-1];
	}
	for(auto k: g[v]){
		if(k==p) continue;
		dfs(k, v);
	}
	out[v]=timer++;
}
 
bool anc(int u, int v){ return (in[u]<=in[v] && out[v]<=out[u]); }
 
int lca(int u, int v){
	if(anc(u, v)) return u;
	if(anc(v, u)) return v;
	
	for(int i=LOG-1; i>=0; i--){
		if(!anc(pai[u][i], v))
			u = pai[u][i];
	}
	return pai[u][0];
}
void res(int u=0, int p = -1){
    for(auto v : g[u]){
        if(v == p)continue;
        res(v, u);
        dist[u] += dist[v];
    }
}
signed main(){
    ios;
    int n,m;
    cin>>n>>m;
    for(int i=1;i<n;i++){
        int u,v;
        cin>>u>>v; u--, v--;
        g[u].pb(v);
        g[v].pb(u);
        rg[v].pb(u);
    }
    dfs(0, 0);  
    while(m--){
        int u,v;
        cin>>u>>v;
        --u,--v;
        int anc = lca(u, v);
        dist[u]++;
        dist[v]++;
        dist[anc]--;
        if(anc != 0)
            dist[pai[anc][0]]--;
    }
    res();
    for(int i=0;i<n;i++)
        cout<<dist[i]<<" \n"[i==n-1];
}


