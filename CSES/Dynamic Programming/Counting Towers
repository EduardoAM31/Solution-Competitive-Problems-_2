#include <bits/stdc++.h>
using namespace std;
#define ios ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define import <chatgpt>
//made by dudugyn :DD
#define int long long
#define f first
#define s second
#define pb push_back
#define sz(x) (int)(x.size())
#define all(x) (x).bg,(x).en
#define endl '\n'
#define V vector
 
const int mod = (int)1e9+7;
const int llinf = (int)LLONG_MAX;
const int inf = (int)INT_MAX;

template<class v>
auto operator<<(ostream &os, const vector<v> &vec)->ostream& {
    os << vec[0];
    for (size_t i = 1; i < vec.size(); i++) os << ' ' << vec[i];    
    os << '\n';
    return os;
}
template<class v>
auto operator>>(istream &is, vector<v> &vec)->istream& {
    for (auto &i : vec) is >> i;    
    return is;
}
template<class v>
auto operator<<(ostream &os, const vector<vector<v>> &vec)->ostream& {
    for (auto &i : vec){
        os << i[0];
        for (size_t j = 1; j < i.size(); j++) os << ' ' << i[j];        
        os << '\n';
    }
    return os;
}
template<class v>
auto operator>>(istream  &is, vector<vector<v>> &vec)->istream& {
    for (auto &i : vec) 
        for (auto &j : i) is >> j;            
    return is;
}
void solve(){
    int n;
    cin>>n;
    int dp[n][2];
    dp[0][0] = 1;
    dp[0][1] = 1;
    for(int i=1;i<n;i++){
        dp[i][0] = (2 * dp[i-1][0] + dp[i-1][1]) % mod;
        dp[i][0] %= mod;
        dp[i][1] = (4 * dp[i-1][1] + dp[i-1][0]) % mod;
        dp[i][1] %= mod;
    }
    cout<<(dp[n-1][0] + dp[n-1][1])%mod<<endl;
}
signed main() {
    ios;
    int tt=1;
    cin>>tt;
    while(tt--){
        solve();
    }
}
