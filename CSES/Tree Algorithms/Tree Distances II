#include <bits/stdc++.h>
using namespace std;
#define ios ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define import <chatgpt>
#define kiwi queue
//made by dudugyn :DD
#define int long long
#define f first
#define s second
#define pb push_back
#define bg begin()
#define en end()
#define rbg rbegin()
#define ren rend()
#define sz(x) (int)(x.size())
#define all(x) (x).bg,(x).en
#define alld(x) (x).rbg,(x).ren
#define lb lower_bound
#define up upper_bound 
#define sorc(x) sort(all(x))
#define sord(x) sort(alld(x))
#define rever(x) string(alld(x))
 
int mod = (int)1e9+7;
#define inf LLONG_MAX
#define endl '\n'
 
#define vi vector<int>
#define vvi vector<vi>
#define vvvi vector<vvi>
#define pii pair<int,int>
#define vpi vector<pii>
#define vvpi vector<vpi>
//auto func = [&]() -> vi{};
int fmod(const int i, const int j){
	return i < j ? i : i % j;
}
template<class v>
auto operator<<(ostream &os, const vector<v> &vec)->ostream& {
    os << vec[0];
    for (size_t i = 1; i < vec.size(); i++) 
        os << ' ' << vec[i];    
    os << '\n';
    return os;
}
template<class v>
auto operator>>(istream &is, vector<v> &vec)->istream& {
    for (auto &i : vec) 
        is >> i;    
    return is;
}
template<class v>
auto operator<<(ostream &os, const vector<vector<v>> &vec)->ostream& {
    for (auto &i : vec) {
        os << i[0];
        for (size_t j = 1; j < i.size(); j++) 
            os << ' ' << i[j];        
        os << '\n';
    }
    return os;
}
template<class v>
auto operator>>(istream  &is, vector<vector<v>> &vec)->istream& {
    for (auto &i : vec) 
        for (auto &j : i) 
            is >> j;            
    return is;
}
int n;
vvi adj;
vi dp;
vi no;
int cont=0;
vector<bool> vis;
int dfs(int i,int c){
    vis[i]=1;
    for(auto j : adj[i]){
        if(!vis[j])
            no[i] += dfs(j,c+1);
    }
    cont+=c;
    return no[i];
}
void calc(int i,int p){
    vis[i]=1;
    dp[i] = dp[p] - no[i] + (n-no[i]);
    for(auto j : adj[i])
        if(!vis[j])calc(j,i);
}
signed main(){
	ios;
    cin>>n;
    adj = vvi(n);
    for(int i=0;i<n-1;i++){
        int a,b;
        cin>>a>>b;
        adj[a-1].pb(b-1);
        adj[b-1].pb(a-1);
    }
    no = vi(n,1);
    dp = vi(n,0);
    vis = vector<bool> (n,0);
    dfs(0,0);
    dp[0]=cont;
    for(auto i : adj[0]){
        vis = vector<bool> (n,0);
        vis[0]=1;
        calc(i,0);
    }
    cout<<dp;
} 
