#include <bits/stdc++.h>
using namespace std;
#define ios ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define import <chatgpt>
#define kiwi queue
//made by dudugyn :DD
#define int long long
#define f first
#define s second
#define pb push_back
#define bg begin()
#define en end()
#define rbg rbegin()
#define ren rend()
#define sz(x) (int)(x.size())
#define all(x) (x).bg,(x).en
#define alld(x) (x).rbg,(x).ren
#define lb lower_bound
#define up upper_bound 
#define sorc(x) sort(all(x))
#define sord(x) sort(alld(x))
#define rever(x) string(alld(x))
 
int mod = (int)1e9+7;
#define inf LLONG_MAX
#define endl '\n'

#define vi vector<int>
#define vvi vector<vi>
#define vvvi vector<vvi>
#define pii pair<int,int>
#define pdd pair<double,double>
#define vpi vector<pii>
//broken input = i, ceil = j -> fmod(i, j) == i%j
//auto func = [&]() -> vi{};
int fmod(const int i, const int j){
	return i < j ? i : i % j;
}
template<class v>
auto operator<<(ostream &os, const vector<v> &vec)->ostream& {
    os << vec[0];
    for (size_t i = 1; i < vec.size(); i++) 
        os << ' ' << vec[i];    
    os << '\n';
    return os;
}
template<class v>
auto operator>>(istream &is, vector<v> &vec)->istream& {
    for (auto &i : vec) 
        is >> i;    
    return is;
}
template<class v>
auto operator<<(ostream &os, const vector<vector<v>> &vec)->ostream& {
    for (auto &i : vec) {
        os << i[0];
        for (size_t j = 1; j < i.size(); j++) 
            os << ' ' << i[j];        
        os << '\n';
    }
    return os;
}
template<class v>
auto operator>>(istream  &is, vector<vector<v>> &vec)->istream& {
    for (auto &i : vec) 
        for (auto &j : i) 
            is >> j;            
    return is;
}
vvi adj;
vi toposort(int n){
    vi cons(n);
    for (int i = 0; i < n; i++) 
        for (auto it : adj[i]) 
            cons[it]++;
    kiwi<int> q;
    for (int i = 0; i < n; i++) 
        if (cons[i] == 0) 
            q.push(i);
    vi imp;
    while (!q.empty()) {
        int node = q.front();
        q.pop();
        imp.push_back(node);
        for (auto it : adj[node]) {
            cons[it]--;
            if (cons[it] == 0)
                q.push(it);
        }
    }
    if (sz(imp) != n) {
        return {};
    }
    return imp;
}
signed main(){
	ios;
    int n,m;
    while(cin>>n>>m, !(n == 0 && m == 0)){
        adj = vvi(n);
        for(int i=0;i<m;i++){
            int l,r;
            cin>>l>>r;
            adj[l-1].pb(r-1);
        }
        vi v=toposort(n);
        for(int i=0;i<n;i++)cout<<v[i]+1<<" \n"[i==n-1];
    }
}
